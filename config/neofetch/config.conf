# =====================================================
# Ultimate Neofetch Configuration for Pop!_OS i3 Rice
# Catppuccin Mocha Theme Integration
# Customized for duke pan
# =====================================================

print_info() {
    prin "$(color 6)╔══════════════════════════════════════════╗"
    prin "$(color 6)║$(color 7)              Welcome back,              $(color 6)║"
    prin "$(color 6)║$(color 3)                duke pan                $(color 6)║"
    prin "$(color 6)╚══════════════════════════════════════════╝"
    prin ""
    
    info title
    info underline
    
    # System Information
    prin "┌─────────────────────────────────────────┐"
    info " OS" distro
    info " Host" model
    info " Kernel" kernel
    info " Uptime" uptime
    info " Packages" packages
    info " Shell" shell
    prin "├─────────────────────────────────────────┤"
    
    # Desktop Environment
    info " DE" de
    info " WM" wm
    info " WM Theme" wm_theme
    info " Theme" theme
    info " Icons" icons
    info " Terminal" term
    info " Font" term_font
    prin "├─────────────────────────────────────────┤"
    
    # Hardware Information
    info " CPU" cpu
    info " GPU" gpu
    info " Memory" memory
    info " Disk" disk
    info " Resolution" resolution
    info " Refresh Rate" refresh_rate
    prin "├─────────────────────────────────────────┤"
    
    # Network & System Status
    info " Local IP" local_ip
    info " Public IP" public_ip
    info " Battery" battery
    info " CPU Usage" cpu_usage
    info " Temperature" cpu_temp
    prin "├─────────────────────────────────────────┤"
    
    prin "$(color 5)┌─── duke pan's System Stats ───┐"
    get_i3_workspaces
    get_i3_windows
    get_system_load
    get_performance_info
    prin "$(color 5)└────────────────────────────────┘"
    prin "├─────────────────────────────────────────┤"
    
    # Media & Extras
    info " Song" song
    [[ "$player" ]] && prin " Music Player" "$player"
    info " Locale" locale
    info " Users" users
    prin "└─────────────────────────────────────────┘"
    
    prin ""
    prin "$(color 3)    ╭─────────────────────────────────────╮"
    prin "$(color 3)    │  $(color 7)duke pan's ultimate i3 rice setup  $(color 3)│"
    prin "$(color 3)    │  $(color 6)Powered by Catppuccin Mocha theme  $(color 3)│"
    prin "$(color 3)    ╰─────────────────────────────────────╯"
    prin ""
    prin "$(color 1)███$(color 2)███$(color 3)███$(color 4)███$(color 5)███$(color 6)███$(color 7)███$(color 0)"
    prin "$(color 9)███$(color 10)███$(color 11)███$(color 12)███$(color 13)███$(color 14)███$(color 15)███$(color 8)"
}

# =====================================================
# Title Configuration
# =====================================================
title_fqdn="off"

# =====================================================
# Kernel Configuration
# =====================================================
kernel_shorthand="on"

# =====================================================
# Distro Configuration
# =====================================================
distro_shorthand="off"
os_arch="on"

# =====================================================
# Uptime Configuration
# =====================================================
uptime_shorthand="on"

# =====================================================
# Memory Configuration
# =====================================================
memory_percent="on"
memory_unit="gib"

# =====================================================
# Package Configuration
# =====================================================
package_managers="on"

# =====================================================
# Shell Configuration
# =====================================================
shell_path="off"
shell_version="on"

# =====================================================
# CPU Configuration
# =====================================================
speed_type="bios_limit"
speed_shorthand="on"
cpu_brand="on"
cpu_speed="on"
cpu_cores="logical"
cpu_temp="C"

# =====================================================
# GPU Configuration
# =====================================================
gpu_brand="on"
gpu_type="all"

# =====================================================
# Resolution Configuration
# =====================================================
refresh_rate="on"

# =====================================================
# GTK Theme Configuration
# =====================================================
gtk_shorthand="off"
gtk2="on"
gtk3="on"

# =====================================================
# IP Address Configuration
# =====================================================
public_ip_host="http://ident.me"
public_ip_timeout=2
local_ip_interface=('auto')

# =====================================================
# Desktop Environment Configuration
# =====================================================
de_version="on"

# =====================================================
# Disk Configuration
# =====================================================
disk_show=('/' '/home')
disk_subtitle="mount"
disk_percent="on"

# =====================================================
# Music Configuration
# =====================================================
music_player="auto"
song_format="%artist% - %album% - %title%"
song_shorthand="off"
mpc_args=()

# =====================================================
# Text Colors (Catppuccin Mocha)
# =====================================================
colors=(6 6 7 1 8 6)

# =====================================================
# Text Options
# =====================================================
bold="on"
underline_enabled="on"
underline_char="─"
separator=" ❯"

# =====================================================
# Color Blocks Configuration
# =====================================================
block_range=(0 15)
color_blocks="on"
block_width=4
block_height=1
col_offset="auto"

# =====================================================
# Progress Bars Configuration
# =====================================================
bar_char_elapsed="━"
bar_char_total="━"
bar_border="on"
bar_length=20
bar_color_elapsed="6"
bar_color_total="8"

# =====================================================
# Backend Settings
# =====================================================
image_backend="ascii"
image_source="auto"

# =====================================================
# ASCII Configuration
# =====================================================
ascii_distro="Pop_OS"
ascii_colors=(6 7 1 3 5 4)
ascii_bold="on"

# =====================================================
# Image Options
# =====================================================
image_loop="off"
thumbnail_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/thumbnails/neofetch"
crop_mode="normal"
crop_offset="center"
image_size="auto"
gap=4
yoffset=0
xoffset=0
background_color=

# =====================================================
# Miscellaneous Options
# =====================================================
stdout="off"

# =====================================================
# Custom Functions for Enhanced Display
# =====================================================

# Custom CPU temperature function
get_cpu_temp() {
    case $os in
        "Linux"*)
            if [[ -f "/sys/class/thermal/thermal_zone0/temp" ]]; then
                temp=$(cat /sys/class/thermal/thermal_zone0/temp)
                temp=$((temp / 1000))
                prin "CPU Temp" "${temp}°C"
            fi
        ;;
    esac
}

# Custom battery function with enhanced info
get_battery_info() {
    case $os in
        "Linux"*)
            if [[ -d "/sys/class/power_supply/BAT0" ]]; then
                capacity=$(cat /sys/class/power_supply/BAT0/capacity 2>/dev/null)
                status=$(cat /sys/class/power_supply/BAT0/status 2>/dev/null)
                
                case $status in
                    "Charging") battery_icon="🔌" ;;
                    "Discharging") battery_icon="🔋" ;;
                    "Full") battery_icon="🔋" ;;
                    *) battery_icon="❓" ;;
                esac
                
                if [[ -n $capacity ]]; then
                    prin "Battery" "${battery_icon} ${capacity}% (${status})"
                fi
            fi
        ;;
    esac
}

# Custom system load function
get_system_load() {
    if [[ -f "/proc/loadavg" ]]; then
        load=$(awk '{print $1}' /proc/loadavg)
        prin "Load Average" "${load}"
    fi
}

# Custom network speed function
get_network_speed() {
    if command -v vnstat >/dev/null 2>&1; then
        speed=$(vnstat -i $(ip route | grep default | awk '{print $5}' | head -1) --json | jq -r '.interfaces[0].traffic.day[-1].tx + .interfaces[0].traffic.day[-1].rx')
        if [[ -n $speed && $speed != "null" ]]; then
            prin "Network Usage" "${speed} MB"
        fi
    fi
}

get_custom_greeting() {
    local hour=$(date +%H)
    local greeting=""
    
    if [[ $hour -lt 12 ]]; then
        greeting="Good morning, duke pan!"
    elif [[ $hour -lt 17 ]]; then
        greeting="Good afternoon, duke pan!"
    elif [[ $hour -lt 21 ]]; then
        greeting="Good evening, duke pan!"
    else
        greeting="Good night, duke pan!"
    fi
    
    prin "$(color 6)$greeting"
}

# =====================================================
# Pop!_OS Specific Customizations
# =====================================================

# Custom Pop!_OS ASCII art with enhanced styling
get_distro_ascii() {
    case $ascii_distro in
        "Pop_OS"*)
            ascii_colors=(6 7 1 3 5 4)
            ascii_bold="on"
        ;;
    esac
}

# Enhanced Pop!_OS detection
get_distro() {
    if [[ -f "/etc/pop-release" ]]; then
        distro="Pop!_OS $(cat /etc/pop-release)"
    elif [[ -f "/etc/os-release" ]] && grep -q "Pop" /etc/os-release; then
        distro=$(grep "PRETTY_NAME" /etc/os-release | cut -d'"' -f2)
    fi
}

# =====================================================
# i3 Window Manager Specific Information
# =====================================================

# Get i3 workspace information
get_i3_workspaces() {
    if command -v i3-msg >/dev/null 2>&1; then
        workspaces=$(i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true) | .name')
        if [[ -n $workspaces ]]; then
            prin "Current Workspace" "$workspaces"
        fi
    fi
}

# Get i3 window count
get_i3_windows() {
    if command -v i3-msg >/dev/null 2>&1; then
        windows=$(i3-msg -t get_tree | jq '[.. | objects | select(.window_type=="normal")] | length')
        if [[ -n $windows ]]; then
            prin "Open Windows" "$windows"
        fi
    fi
}

# =====================================================
# Performance Monitoring
# =====================================================

# Get system performance metrics
get_performance_info() {
    # CPU usage
    if command -v top >/dev/null 2>&1; then
        cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)
        prin "CPU Usage" "${cpu_usage}%"
    fi
    
    # Memory usage with swap
    if [[ -f "/proc/meminfo" ]]; then
        mem_total=$(grep "MemTotal" /proc/meminfo | awk '{print $2}')
        mem_available=$(grep "MemAvailable" /proc/meminfo | awk '{print $2}')
        mem_used=$((mem_total - mem_available))
        mem_percent=$((mem_used * 100 / mem_total))
        
        swap_total=$(grep "SwapTotal" /proc/meminfo | awk '{print $2}')
        swap_free=$(grep "SwapFree" /proc/meminfo | awk '{print $2}')
        
        if [[ $swap_total -gt 0 ]]; then
            swap_used=$((swap_total - swap_free))
            swap_percent=$((swap_used * 100 / swap_total))
            prin "Swap Usage" "${swap_percent}%"
        fi
    fi
}

# =====================================================
# Custom Color Scheme (Catppuccin Mocha)
# =====================================================

# Define custom colors for better integration
export NEOFETCH_COLORS=(
    "\033[38;2;245;224;220m"  # Rosewater
    "\033[38;2;242;205;205m"  # Flamingo
    "\033[38;2;245;194;231m"  # Pink
    "\033[38;2;203;166;247m"  # Mauve
    "\033[38;2;243;139;168m"  # Red
    "\033[38;2;235;160;172m"  # Maroon
    "\033[38;2;250;179;135m"  # Peach
    "\033[38;2;249;226;175m"  # Yellow
    "\033[38;2;166;227;161m"  # Green
    "\033[38;2;148;226;213m"  # Teal
    "\033[38;2;137;220;235m"  # Sky
    "\033[38;2;116;199;236m"  # Sapphire
    "\033[38;2;137;180;250m"  # Blue
    "\033[38;2;180;190;254m"  # Lavender
    "\033[38;2;205;214;244m"  # Text
    "\033[38;2;186;194;222m"  # Subtext1
)

# =====================================================
# duke pan's Custom ASCII Art
# =====================================================

get_custom_ascii() {
    prin "$(color 6)    ██████╗ ██╗   ██╗██╗  ██╗███████╗"
    prin "$(color 6)    ██╔══██╗██║   ██║██║ ██╔╝██╔════╝"
    prin "$(color 3)    ██║  ██║██║   ██║█████╔╝ █████╗  "
    prin "$(color 3)    ██║  ██║██║   ██║██╔═██╗ ██╔══╝  "
    prin "$(color 5)    ██████╔╝╚██████╔╝██║  ██╗███████╗"
    prin "$(color 5)    ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚══════╝"
    prin "$(color 7)           ██████╗  █████╗ ███╗   ██╗"
    prin "$(color 7)           ██╔══██╗██╔══██╗████╗  ██║"
    prin "$(color 1)           ██████╔╝███████║██╔██╗ ██║"
    prin "$(color 1)           ██╔═══╝ ██╔══██║██║╚██╗██║"
    prin "$(color 2)           ██║     ██║  ██║██║ ╚████║"
    prin "$(color 2)           ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝"
}
