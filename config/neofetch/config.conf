# =====================================================
# Ultimate Neofetch Configuration for Pop!_OS i3 Rice
# Catppuccin Mocha Theme Integration
# Customized for duke pan
# =====================================================

print_info() {
    prin "$(color 6)╔══════════════════════════════════════════════════════╗"
    prin "$(color 6)║$(color 3)    ██████╗ ██╗   ██╗██╗  ██╗███████╗           $(color 6)║"
    prin "$(color 6)║$(color 3)    ██╔══██╗██║   ██║██║ ██╔╝██╔════╝           $(color 6)║"
    prin "$(color 6)║$(color 5)    ██║  ██║██║   ██║█████╔╝ █████╗             $(color 6)║"
    prin "$(color 6)║$(color 5)    ██║  ██║██║   ██║██╔═██╗ ██╔══╝             $(color 6)║"
    prin "$(color 6)║$(color 1)    ██████╔╝╚██████╔╝██║  ██╗███████╗           $(color 6)║"
    prin "$(color 6)║$(color 1)    ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚══════╝           $(color 6)║"
    prin "$(color 6)║$(color 7)           ██████╗  █████╗ ███╗   ██╗           $(color 6)║"
    prin "$(color 6)║$(color 7)           ██╔══██╗██╔══██╗████╗  ██║           $(color 6)║"
    prin "$(color 6)║$(color 2)           ██████╔╝███████║██╔██╗ ██║           $(color 6)║"
    prin "$(color 6)║$(color 2)           ██╔═══╝ ██╔══██║██║╚██╗██║           $(color 6)║"
    prin "$(color 6)║$(color 4)           ██║     ██║  ██║██║ ╚████║           $(color 6)║"
    prin "$(color 6)║$(color 4)           ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝           $(color 6)║"
    prin "$(color 6)║                                                        $(color 6)║"
    prin "$(color 6)║$(color 7)              🚀 Ultimate i3 Rice Master 🚀        $(color 6)║"
    prin "$(color 6)╚══════════════════════════════════════════════════════╝"
    prin ""
    
    get_custom_greeting
    prin ""
    
    info title
    info underline
    
    # System Information with enhanced styling
    prin "$(color 6)┌─────────────────────────────────────────┐"
    prin "$(color 6)│$(color 7)           🖥️  SYSTEM INFO           $(color 6)│"
    prin "$(color 6)├─────────────────────────────────────────┤"
    info "$(color 3) OS" distro
    info "$(color 3) Host" model
    info "$(color 3) Kernel" kernel
    info "$(color 3) Uptime" uptime
    info "$(color 3) Packages" packages
    info "$(color 3) Shell" shell
    prin "$(color 6)├─────────────────────────────────────────┤"
    
    # Desktop Environment with icons
    prin "$(color 6)│$(color 7)           🎨 DESKTOP SETUP          $(color 6)│"
    prin "$(color 6)├─────────────────────────────────────────┤"
    info "$(color 5) DE" de
    info "$(color 5) WM" wm
    info "$(color 5) WM Theme" wm_theme
    info "$(color 5) Theme" theme
    info "$(color 5) Icons" icons
    info "$(color 5) Terminal" term
    info "$(color 5) Font" term_font
    prin "$(color 6)├─────────────────────────────────────────┤"
    
    # Hardware Information with enhanced display
    prin "$(color 6)│$(color 7)           ⚡ HARDWARE SPECS         $(color 6)│"
    prin "$(color 6)├─────────────────────────────────────────┤"
    info "$(color 1) CPU" cpu
    info "$(color 1) GPU" gpu
    info "$(color 1) Memory" memory
    info "$(color 1) Disk" disk
    info "$(color 1) Resolution" resolution
    info "$(color 1) Refresh Rate" refresh_rate
    prin "$(color 6)├─────────────────────────────────────────┤"
    
    prin "$(color 6)│$(color 7)           📊 LIVE MONITORING        $(color 6)│"
    prin "$(color 6)├─────────────────────────────────────────┤"
    get_cpu_temp
    get_battery_info
    get_system_load
    get_performance_info
    info "$(color 2) Local IP" local_ip
    prin "$(color 6)├─────────────────────────────────────────┤"
    
    prin "$(color 6)│$(color 7)           🪟 i3 WORKSPACE INFO      $(color 6)│"
    prin "$(color 6)├─────────────────────────────────────────┤"
    get_i3_workspaces
    get_i3_windows
    get_i3_mode
    prin "$(color 6)├─────────────────────────────────────────┤"
    
    # Media & Extras
    prin "$(color 6)│$(color 7)           🎵 MEDIA & EXTRAS         $(color 6)│"
    prin "$(color 6)├─────────────────────────────────────────┤"
    info "$(color 4) Song" song
    [[ "$player" ]] && prin "$(color 4) Music Player" "$player"
    info "$(color 4) Locale" locale
    prin "$(color 6)└─────────────────────────────────────────┘"
    
    prin ""
    prin "$(color 3)    ╭─────────────────────────────────────────────╮"
    prin "$(color 3)    │  $(color 7)👑 duke pan's legendary i3 rice setup 👑  $(color 3)│"
    prin "$(color 3)    │  $(color 6)🎨 Powered by Catppuccin Mocha theme 🎨  $(color 3)│"
    prin "$(color 3)    │  $(color 5)⚡ Performance • Beauty • Productivity ⚡  $(color 3)│"
    prin "$(color 3)    ╰─────────────────────────────────────────────╯"
    prin ""
    
    prin "$(color 1)████$(color 2)████$(color 3)████$(color 4)████$(color 5)████$(color 6)████$(color 7)████$(color 0)████"
    prin "$(color 9)████$(color 10)████$(color 11)████$(color 12)████$(color 13)████$(color 14)████$(color 15)████$(color 8)████"
}

# =====================================================
# Title Configuration
# =====================================================
title_fqdn="off"

# =====================================================
# Kernel Configuration
# =====================================================
kernel_shorthand="on"

# =====================================================
# Distro Configuration
# =====================================================
distro_shorthand="off"
os_arch="on"

# =====================================================
# Uptime Configuration
# =====================================================
uptime_shorthand="on"

# =====================================================
# Memory Configuration
# =====================================================
memory_percent="on"
memory_unit="gib"

# =====================================================
# Package Configuration
# =====================================================
package_managers="on"

# =====================================================
# Shell Configuration
# =====================================================
shell_path="off"
shell_version="on"

# =====================================================
# CPU Configuration
# =====================================================
speed_type="bios_limit"
speed_shorthand="on"
cpu_brand="on"
cpu_speed="on"
cpu_cores="logical"
cpu_temp="C"

# =====================================================
# GPU Configuration
# =====================================================
gpu_brand="on"
gpu_type="all"

# =====================================================
# Resolution Configuration
# =====================================================
refresh_rate="on"

# =====================================================
# GTK Theme Configuration
# =====================================================
gtk_shorthand="off"
gtk2="on"
gtk3="on"

# =====================================================
# IP Address Configuration
# =====================================================
public_ip_host="http://ident.me"
public_ip_timeout=2
local_ip_interface=('auto')

# =====================================================
# Desktop Environment Configuration
# =====================================================
de_version="on"

# =====================================================
# Disk Configuration
# =====================================================
disk_show=('/' '/home')
disk_subtitle="mount"
disk_percent="on"

# =====================================================
# Music Configuration
# =====================================================
music_player="auto"
song_format="%artist% - %album% - %title%"
song_shorthand="off"
mpc_args=()

# =====================================================
# Text Colors (Catppuccin Mocha)
# =====================================================
colors=(6 6 7 1 8 6)

# =====================================================
# Text Options
# =====================================================
bold="on"
underline_enabled="on"
underline_char="─"
separator=" ❯"

# =====================================================
# Color Blocks Configuration
# =====================================================
block_range=(0 15)
color_blocks="on"
block_width=4
block_height=1
col_offset="auto"

# =====================================================
# Progress Bars Configuration
# =====================================================
bar_char_elapsed="━"
bar_char_total="━"
bar_border="on"
bar_length=20
bar_color_elapsed="6"
bar_color_total="8"

# =====================================================
# Backend Settings
# =====================================================
image_backend="ascii"
image_source="auto"

# =====================================================
# ASCII Configuration
# =====================================================
ascii_distro="Pop_OS"
ascii_colors=(6 7 1 3 5 4)
ascii_bold="on"

# =====================================================
# Image Options
# =====================================================
image_loop="off"
thumbnail_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/thumbnails/neofetch"
crop_mode="normal"
crop_offset="center"
image_size="auto"
gap=4
yoffset=0
xoffset=0
background_color=

# =====================================================
# Miscellaneous Options
# =====================================================
stdout="off"

# =====================================================
# Custom Functions for Enhanced Display
# =====================================================

get_cpu_temp() {
    case $os in
        "Linux"*)
            if [[ -f "/sys/class/thermal/thermal_zone0/temp" ]]; then
                temp=$(cat /sys/class/thermal/thermal_zone0/temp)
                temp=$((temp / 1000))
                
                # Color coding based on temperature
                if [[ $temp -lt 50 ]]; then
                    temp_color="$(color 2)"  # Green for cool
                elif [[ $temp -lt 70 ]]; then
                    temp_color="$(color 3)"  # Yellow for warm
                else
                    temp_color="$(color 1)"  # Red for hot
                fi
                
                prin "$(color 2) CPU Temp" "${temp_color}${temp}°C 🌡️"
            fi
        ;;
    esac
}

get_battery_info() {
    case $os in
        "Linux"*)
            if [[ -d "/sys/class/power_supply/BAT0" ]]; then
                capacity=$(cat /sys/class/power_supply/BAT0/capacity 2>/dev/null)
                status=$(cat /sys/class/power_supply/BAT0/status 2>/dev/null)
                
                # Enhanced battery icons and colors
                case $status in
                    "Charging") 
                        battery_icon="🔌"
                        battery_color="$(color 2)"
                        ;;
                    "Discharging") 
                        if [[ $capacity -gt 50 ]]; then
                            battery_icon="🔋"
                            battery_color="$(color 2)"
                        elif [[ $capacity -gt 20 ]]; then
                            battery_icon="🔋"
                            battery_color="$(color 3)"
                        else
                            battery_icon="🪫"
                            battery_color="$(color 1)"
                        fi
                        ;;
                    "Full") 
                        battery_icon="🔋"
                        battery_color="$(color 2)"
                        ;;
                    *) 
                        battery_icon="❓"
                        battery_color="$(color 7)"
                        ;;
                esac
                
                if [[ -n $capacity ]]; then
                    prin "$(color 2) Battery" "${battery_color}${battery_icon} ${capacity}% (${status})"
                fi
            fi
        ;;
    esac
}

get_system_load() {
    if [[ -f "/proc/loadavg" ]]; then
        load=$(awk '{print $1}' /proc/loadavg)
        load_1min=$(awk '{print $1}' /proc/loadavg)
        load_5min=$(awk '{print $2}' /proc/loadavg)
        load_15min=$(awk '{print $3}' /proc/loadavg)
        
        # Color coding based on load
        if (( $(echo "$load < 1.0" | bc -l) )); then
            load_color="$(color 2)"  # Green for low load
        elif (( $(echo "$load < 2.0" | bc -l) )); then
            load_color="$(color 3)"  # Yellow for medium load
        else
            load_color="$(color 1)"  # Red for high load
        fi
        
        prin "$(color 2) Load Avg" "${load_color}${load_1min}, ${load_5min}, ${load_15min} ⚡"
    fi
}

get_custom_greeting() {
    local hour=$(date +%H)
    local day=$(date +%A)
    local greeting=""
    local emoji=""
    
    if [[ $hour -lt 6 ]]; then
        greeting="Still up late, duke pan? 🌙"
        emoji="🦉"
    elif [[ $hour -lt 12 ]]; then
        greeting="Good morning, duke pan! ☀️"
        emoji="🌅"
    elif [[ $hour -lt 17 ]]; then
        greeting="Good afternoon, duke pan! 🌤️"
        emoji="☀️"
    elif [[ $hour -lt 21 ]]; then
        greeting="Good evening, duke pan! 🌆"
        emoji="🌇"
    else
        greeting="Good night, duke pan! 🌃"
        emoji="🌙"
    fi
    
    prin "$(color 6)${emoji} ${greeting}"
    prin "$(color 7)Happy ${day}! Ready to rice? 🚀"
}

get_i3_workspaces() {
    if command -v i3-msg >/dev/null 2>&1; then
        current_ws=$(i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true) | .name')
        total_ws=$(i3-msg -t get_workspaces | jq -r '.[] | .name' | wc -l)
        
        if [[ -n $current_ws ]]; then
            prin "$(color 5) Current WS" "🪟 ${current_ws} (${total_ws} total)"
        fi
    fi
}

get_i3_windows() {
    if command -v i3-msg >/dev/null 2>&1; then
        windows=$(i3-msg -t get_tree | jq '[.. | objects | select(.window_type=="normal")] | length')
        floating=$(i3-msg -t get_tree | jq '[.. | objects | select(.floating=="user_on")] | length')
        
        if [[ -n $windows ]]; then
            prin "$(color 5) Open Windows" "📱 ${windows} (${floating} floating)"
        fi
    fi
}

get_i3_mode() {
    if command -v i3-msg >/dev/null 2>&1; then
        mode=$(i3-msg -t get_binding_state | jq -r '.name')
        if [[ -n $mode && $mode != "default" ]]; then
            prin "$(color 5) i3 Mode" "⚙️ ${mode}"
        fi
    fi
}

get_performance_info() {
    # CPU usage with better formatting
    if command -v top >/dev/null 2>&1; then
        cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)
        
        # Color coding for CPU usage
        if (( $(echo "$cpu_usage < 30" | bc -l) )); then
            cpu_color="$(color 2)"
        elif (( $(echo "$cpu_usage < 70" | bc -l) )); then
            cpu_color="$(color 3)"
        else
            cpu_color="$(color 1)"
        fi
        
        prin "$(color 2) CPU Usage" "${cpu_color}${cpu_usage}% 🔥"
    fi
    
    # Enhanced memory usage
    if [[ -f "/proc/meminfo" ]]; then
        mem_total=$(grep "MemTotal" /proc/meminfo | awk '{print $2}')
        mem_available=$(grep "MemAvailable" /proc/meminfo | awk '{print $2}')
        mem_used=$((mem_total - mem_available))
        mem_percent=$((mem_used * 100 / mem_total))
        
        # Memory usage color coding
        if [[ $mem_percent -lt 50 ]]; then
            mem_color="$(color 2)"
        elif [[ $mem_percent -lt 80 ]]; then
            mem_color="$(color 3)"
        else
            mem_color="$(color 1)"
        fi
        
        prin "$(color 2) RAM Usage" "${mem_color}${mem_percent}% 🧠"
        
        # Swap information
        swap_total=$(grep "SwapTotal" /proc/meminfo | awk '{print $2}')
        swap_free=$(grep "SwapFree" /proc/meminfo | awk '{print $2}')
        
        if [[ $swap_total -gt 0 ]]; then
            swap_used=$((swap_total - swap_free))
            swap_percent=$((swap_used * 100 / swap_total))
            
            if [[ $swap_percent -gt 0 ]]; then
                prin "$(color 2) Swap Usage" "💾 ${swap_percent}%"
            fi
        fi
    fi
}

# =====================================================
# Custom Color Scheme (Catppuccin Mocha)
# =====================================================

# Define custom colors for better integration
export NEOFETCH_COLORS=(
    "\033[38;2;245;224;220m"  # Rosewater
    "\033[38;2;242;205;205m"  # Flamingo
    "\033[38;2;245;194;231m"  # Pink
    "\033[38;2;203;166;247m"  # Mauve
    "\033[38;2;243;139;168m"  # Red
    "\033[38;2;235;160;172m"  # Maroon
    "\033[38;2;250;179;135m"  # Peach
    "\033[38;2;249;226;175m"  # Yellow
    "\033[38;2;166;227;161m"  # Green
    "\033[38;2;148;226;213m"  # Teal
    "\033[38;2;137;220;235m"  # Sky
    "\033[38;2;116;199;236m"  # Sapphire
    "\033[38;2;137;180;250m"  # Blue
    "\033[38;2;180;190;254m"  # Lavender
    "\033[38;2;205;214;244m"  # Text
    "\033[38;2;186;194;222m"  # Subtext1
)

# =====================================================
# duke pan's Custom ASCII Art
# =====================================================

get_custom_ascii() {
    prin "$(color 6)    ██████╗ ██╗   ██╗██╗  ██╗███████╗"
    prin "$(color 6)    ██╔══██╗██║   ██║██║ ██╔╝██╔════╝"
    prin "$(color 3)    ██║  ██║██║   ██║█████╔╝ █████╗  "
    prin "$(color 3)    ██║  ██║██║   ██║██╔═██╗ ██╔══╝  "
    prin "$(color 5)    ██████╔╝╚██████╔╝██║  ██╗███████╗"
    prin "$(color 5)    ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚══════╝"
    prin "$(color 7)           ██████╗  █████╗ ███╗   ██╗"
    prin "$(color 7)           ██╔══██╗██╔══██╗████╗  ██║"
    prin "$(color 1)           ██████╔╝███████║██╔██╗ ██║"
    prin "$(color 1)           ██╔═══╝ ██╔══██║██║╚██╗██║"
    prin "$(color 2)           ██║     ██║  ██║██║ ╚████║"
    prin "$(color 2)           ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝"
}
